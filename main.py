import telebot
from telebot.types import InlineKeyboardMarkup, InlineKeyboardButton, ReplyKeyboardMarkup, KeyboardButton

# –¢–æ–∫–µ–Ω –≤–∞—à–µ–≥–æ –±–æ—Ç–∞ (–∑–∞–º–µ–Ω–∏—Ç–µ –Ω–∞ —Å–≤–æ–π)
TOKEN = ""

# –°–æ–∑–¥–∞–µ–º –æ–±—ä–µ–∫—Ç –±–æ—Ç–∞
bot = telebot.TeleBot(TOKEN)

# –°–ª–æ–≤–∞—Ä—å –¥–ª—è –≤—Ä–µ–º–µ–Ω–Ω–æ–≥–æ —Ö—Ä–∞–Ω–µ–Ω–∏—è –¥–∞–Ω–Ω—ã—Ö —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏
user_data = {}

# –§—É–Ω–∫—Ü–∏—è –¥–ª—è —Å–æ–∑–¥–∞–Ω–∏—è –∫–ª–∞–≤–∏–∞—Ç—É—Ä—ã –æ—Å–Ω–æ–≤–Ω–æ–≥–æ –º–µ–Ω—é
def create_main_menu():
    markup = InlineKeyboardMarkup()
    markup.row(InlineKeyboardButton("üçï –í—ã–±—Ä–∞—Ç—å –∫–æ–º–±–æ –Ω–∞ –±–æ–ª—å—à—É—é –∫–æ–º–ø–∞–Ω–∏—é 3 –ø–∏—Ü—Ü—ã –æ—Ç 99 000", callback_data='combo_big'))
    markup.row(InlineKeyboardButton("üçï 100% –•–∞–ª–∞–ª", callback_data='halal'))
    markup.row(InlineKeyboardButton("üçπ –ö—Ä—É–≥–ª–æ—Å—É—Ç–æ—á–Ω–∞—è –¥–æ—Å—Ç–∞–≤–∫–∞ –ø–æ –¢–∞—à–∫–µ–Ω—Ç—É", callback_data='delivery'))
    markup.row(InlineKeyboardButton("üçï 35 –¥–∞“õ–∏“õ–∞–¥–∞ –±–µ–ø—É–ª —É–µ—Ç–∫–∞–∑–∏–± –±–µ—Ä–∏—à —ë–∫–∏ –ø–∏—Ü—Ü–∞ —Å–æ–≤“ì–∞", callback_data='fast_delivery'))
    markup.row(InlineKeyboardButton("üçï 100% –•–∞–ª–∞–ª", callback_data='halal_2'))
    markup.row(InlineKeyboardButton("üìû –¢–æ—à–∫–µ–Ω—Ç –±—û–π–∏—á–∞ —É–π–≥ ª—É–Ω-–∫—É–Ω —É–µ—Ç–∫–∞–∑–∏–± –±–µ—Ä–∏—à", callback_data='tashkent_delivery'))
    markup.row(InlineKeyboardButton("üìû Call-center: +998 93 669 6688", callback_data='call_center'))
    markup.row(InlineKeyboardButton("üöÄ –ë—É—é—Ä—Ç–º–∞ –±–µ—Ä–∏—à —É—á—É–Ω /start —Ç—É–≥–º–∞—Å–∏–Ω–∏ –±–æ—Å–∏–Ω–≥", callback_data='restart'))
    return markup

# –§—É–Ω–∫—Ü–∏—è –¥–ª—è —Å–æ–∑–¥–∞–Ω–∏—è –º–µ–Ω—é –ø–∏—Ü—Ü
def create_pizza_menu():
    markup = InlineKeyboardMarkup()
    markup.row(InlineKeyboardButton("üçï –ü–µ–ø–ø–µ—Ä–æ–Ω–∏", callback_data='pizza_pepperoni'))
    markup.row(InlineKeyboardButton("üçï –ú–∞—Ä–≥–∞—Ä–∏—Ç–∞", callback_data='pizza_margherita'))
    markup.row(InlineKeyboardButton("üçï –ß–µ—Ç—ã—Ä–µ —Å—ã—Ä–∞", callback_data='pizza_four_cheese'))
    return markup

# –§—É–Ω–∫—Ü–∏—è –¥–ª—è —Å–æ–∑–¥–∞–Ω–∏—è –∫–ª–∞–≤–∏–∞—Ç—É—Ä—ã —Å –∫–Ω–æ–ø–∫–æ–π "–ü–æ–¥–µ–ª–∏—Ç—å—Å—è –Ω–æ–º–µ—Ä–æ–º"
def create_phone_keyboard():
    markup = ReplyKeyboardMarkup(resize_keyboard=True, one_time_keyboard=True)
    markup.add(KeyboardButton("–ü–æ–¥–µ–ª–∏—Ç—å—Å—è –Ω–æ–º–µ—Ä–æ–º —Ç–µ–ª–µ—Ñ–æ–Ω–∞", request_contact=True))
    return markup

# –ü—Ä–æ–≤–µ—Ä–∫–∞, –∑–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞–Ω –ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å
def is_user_registered(user_id):
    try:
        with open("users.txt", "r", encoding="utf-8") as file:
            for line in file:
                if str(user_id) in line:
                    return True
    except FileNotFoundError:
        return False
    return False

# –°–æ—Ö—Ä–∞–Ω–µ–Ω–∏–µ –¥–∞–Ω–Ω—ã—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
def save_user(user_id, name, phone):
    with open("users.txt", "a", encoding="utf-8") as file:
        file.write(f"UserID: {user_id}, Name: {name}, Phone: {phone}\n")

# –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–æ–º–∞–Ω–¥—ã /start
@bot.message_handler(commands=['start1'])
def send_welcome(message):
    user_id = message.from_user.id
    if is_user_registered(user_id):
        bot.reply_to(message, "–í—ã —É–∂–µ –∑–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞–Ω—ã! –ß–¢–û –ú–û–ñ–ï–¢ –≠–¢–û–¢ –ë–û–¢?", reply_markup=create_main_menu())
    else:
        bot.reply_to(message, "–î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å! –î–∞–≤–∞–π—Ç–µ –∑–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä—É–µ–º –≤–∞—Å. –ö–∞–∫ –≤–∞—Å –∑–æ–≤—É—Ç?")
        bot.register_next_step_handler(message, get_name)

# –ü–æ–ª—É—á–µ–Ω–∏–µ –∏–º–µ–Ω–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
def get_name(message):
    user_id = message.from_user.id
    name = message.text
    user_data[user_id] = {"name": name}
    bot.reply_to(message, "–û—Ç–ª–∏—á–Ω–æ! –¢–µ–ø–µ—Ä—å –ø–æ–¥–µ–ª–∏—Ç–µ—Å—å –≤–∞—à–∏–º –Ω–æ–º–µ—Ä–æ–º —Ç–µ–ª–µ—Ñ–æ–Ω–∞.", reply_markup=create_phone_keyboard())
    bot.register_next_step_handler(message, get_phone)

# –ü–æ–ª—É—á–µ–Ω–∏–µ –Ω–æ–º–µ—Ä–∞ —Ç–µ–ª–µ—Ñ–æ–Ω–∞
@bot.message_handler(content_types=['contact'])
def get_phone(message):
    user_id = message.from_user.id
    if message.contact:
        phone = message.contact.phone_number
        name = user_data.get(user_id, {}).get("name", "Unknown")
        save_user(user_id, name, phone)
        bot.reply_to(message, f"–†–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—è –∑–∞–≤–µ—Ä—à–µ–Ω–∞, {name}! –¢–µ–ø–µ—Ä—å –≤—ã –º–æ–∂–µ—Ç–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç—å—Å—è –±–æ—Ç–æ–º.", reply_markup=telebot.types.ReplyKeyboardRemove())
        bot.send_message(message.chat.id, "–ß–¢–û –ú–û–ñ–ï–¢ –≠–¢–û–¢ –ë–û–¢?", reply_markup=create_main_menu())
    else:
        bot.reply_to(message, "–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –æ—Ç–ø—Ä–∞–≤—å—Ç–µ –≤–∞—à –Ω–æ–º–µ—Ä —Ç–µ–ª–µ—Ñ–æ–Ω–∞, –Ω–∞–∂–∞–≤ –Ω–∞ –∫–Ω–æ–ø–∫—É.", reply_markup=create_phone_keyboard())

# –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–æ–º–∞–Ω–¥—ã /menu
@bot.message_handler(commands=['menu'])
def show_menu(message):
    user_id = message.from_user.id
    if is_user_registered(user_id):
        bot.reply_to(message, "–í—ã–±–µ—Ä–∏—Ç–µ –ø–∏—Ü—Ü—É:", reply_markup=create_pizza_menu())
    else:
        bot.reply_to(message, "–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, —Å–Ω–∞—á–∞–ª–∞ –∑–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä—É–π—Ç–µ—Å—å —Å –ø–æ–º–æ—â—å—é –∫–æ–º–∞–Ω–¥—ã /start.")

# –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–æ–º–∞–Ω–¥—ã /order
@bot.message_handler(commands=['order'])
def handle_order(message):
    user_id = message.from_user.id
    if is_user_registered(user_id):
        bot.reply_to(message, "–í–∞—à –∑–∞–∫–∞–∑ –ø—Ä–∏–Ω—è—Ç! –ú—ã —Å–≤—è–∂–µ–º—Å—è —Å –≤–∞–º–∏ –¥–ª—è –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏—è. Call-center: +998 93 669 6688.")
    else:
        bot.reply_to(message, "–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, —Å–Ω–∞—á–∞–ª–∞ –∑–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä—É–π—Ç–µ—Å—å —Å –ø–æ–º–æ—â—å—é –∫–æ–º–∞–Ω–¥—ã /start1.")

# –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –Ω–∞–∂–∞—Ç–∏–π –Ω–∞ –∫–Ω–æ–ø–∫–∏
@bot.callback_query_handler(func=lambda call: True)
def callback_inline(call):
    user_id = call.from_user.id
    if not is_user_registered(user_id):
        bot.send_message(call.message.chat.id, "–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, —Å–Ω–∞—á–∞–ª–∞ –∑–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä—É–π—Ç–µ—Å—å —Å –ø–æ–º–æ—â—å—é –∫–æ–º–∞–Ω–¥—ã /start.")
        return

    if call.data == 'combo_big':
        bot.send_message(call.message.chat.id, "–í—ã –≤—ã–±—Ä–∞–ª–∏ –∫–æ–º–±–æ –Ω–∞ –±–æ–ª—å—à—É—é –∫–æ–º–ø–∞–Ω–∏—é (3 –ø–∏—Ü—Ü—ã –æ—Ç 99 000). –•–æ—Ç–∏—Ç–µ –æ—Ñ–æ—Ä–º–∏—Ç—å –∑–∞–∫–∞–∑? –ù–∞–ø–∏—à–∏—Ç–µ /order.")
    elif call.data == 'halal' or call.data == 'halal_2':
        bot.send_message(call.message.chat.id, "–ú—ã –ø—Ä–µ–¥–ª–∞–≥–∞–µ–º 100% –•–∞–ª–∞–ª –ø—Ä–æ–¥—É–∫—Ü–∏—é! –•–æ—Ç–∏—Ç–µ –≤—ã–±—Ä–∞—Ç—å –ø–∏—Ü—Ü—É? –ù–∞–ø–∏—à–∏—Ç–µ /menu.")
    elif call.data == 'delivery':
        bot.send_message(call.message.chat.id, "–ö—Ä—É–≥–ª–æ—Å—É—Ç–æ—á–Ω–∞—è –¥–æ—Å—Ç–∞–≤–∫–∞ –ø–æ –¢–∞—à–∫–µ–Ω—Ç—É! –û—Ñ–æ—Ä–º–∏—Ç–µ –∑–∞–∫–∞–∑ —Å –ø–æ–º–æ—â—å—é /order.")
    elif call.data == 'fast_delivery':
        bot.send_message(call.message.chat.id, "–î–æ—Å—Ç–∞–≤–∫–∞ –∑–∞ 35 –º–∏–Ω—É—Ç –∏–ª–∏ –ø–∏—Ü—Ü–∞ –≤ –ø–æ–¥–∞—Ä–æ–∫! –•–æ—Ç–∏—Ç–µ –∑–∞–∫–∞–∑–∞—Ç—å? –ù–∞–ø–∏—à–∏—Ç–µ /order.")
    elif call.data == 'tashkent_delivery':
        bot.send_message(call.message.chat.id, "–î–æ—Å—Ç–∞–≤–∫–∞ –ø–æ –¢–∞—à–∫–µ–Ω—Ç—É 24/7. –û—Ñ–æ—Ä–º–∏—Ç–µ –∑–∞–∫–∞–∑ —Å –ø–æ–º–æ—â—å—é /order.")
    elif call.data == 'call_center':
        bot.send_message(call.message.chat.id, "–°–≤—è–∂–∏—Ç–µ—Å—å —Å –Ω–∞–º–∏: Call-center +998 93 669 6688")
    elif call.data == 'restart':
        bot.send_message(call.message.chat.id, "–ù–∞–∂–º–∏—Ç–µ /start, —á—Ç–æ–±—ã –Ω–∞—á–∞—Ç—å –∑–∞–Ω–æ–≤–æ!")
    elif call.data.startswith('pizza_'):
        pizza_name = call.data.replace('pizza_', '').capitalize()
        bot.send_message(call.message.chat.id, f"–í—ã –≤—ã–±—Ä–∞–ª–∏ –ø–∏—Ü—Ü—É {pizza_name}. –•–æ—Ç–∏—Ç–µ –æ—Ñ–æ—Ä–º–∏—Ç—å –∑–∞–∫–∞–∑? –ù–∞–ø–∏—à–∏—Ç–µ /order.")

# –ó–∞–ø—É—Å–∫ –±–æ—Ç–∞
if __name__ == '__main__':
    print("–ë–æ—Ç –∑–∞–ø—É—â–µ–Ω!")
    bot.polling(none_stop=True)
